// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: remote_display.proto

#ifndef PROTOBUF_INCLUDED_remote_5fdisplay_2eproto
#define PROTOBUF_INCLUDED_remote_5fdisplay_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_remote_5fdisplay_2eproto 

namespace protobuf_remote_5fdisplay_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[4];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_remote_5fdisplay_2eproto
class RemoteDisplayConfigRequest;
class RemoteDisplayConfigRequestDefaultTypeInternal;
extern RemoteDisplayConfigRequestDefaultTypeInternal _RemoteDisplayConfigRequest_default_instance_;
class RemoteDisplayConfigResponse;
class RemoteDisplayConfigResponseDefaultTypeInternal;
extern RemoteDisplayConfigResponseDefaultTypeInternal _RemoteDisplayConfigResponse_default_instance_;
class RemoteDisplaySendRequest;
class RemoteDisplaySendRequestDefaultTypeInternal;
extern RemoteDisplaySendRequestDefaultTypeInternal _RemoteDisplaySendRequest_default_instance_;
class RemoteDisplaySendResponse;
class RemoteDisplaySendResponseDefaultTypeInternal;
extern RemoteDisplaySendResponseDefaultTypeInternal _RemoteDisplaySendResponse_default_instance_;
namespace google {
namespace protobuf {
template<> ::RemoteDisplayConfigRequest* Arena::CreateMaybeMessage<::RemoteDisplayConfigRequest>(Arena*);
template<> ::RemoteDisplayConfigResponse* Arena::CreateMaybeMessage<::RemoteDisplayConfigResponse>(Arena*);
template<> ::RemoteDisplaySendRequest* Arena::CreateMaybeMessage<::RemoteDisplaySendRequest>(Arena*);
template<> ::RemoteDisplaySendResponse* Arena::CreateMaybeMessage<::RemoteDisplaySendResponse>(Arena*);
}  // namespace protobuf
}  // namespace google

enum RemoteDisplayDataType {
  BMP = 0,
  MotionJPEG = 1,
  H264 = 2,
  RemoteDisplayDataType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  RemoteDisplayDataType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool RemoteDisplayDataType_IsValid(int value);
const RemoteDisplayDataType RemoteDisplayDataType_MIN = BMP;
const RemoteDisplayDataType RemoteDisplayDataType_MAX = H264;
const int RemoteDisplayDataType_ARRAYSIZE = RemoteDisplayDataType_MAX + 1;

const ::google::protobuf::EnumDescriptor* RemoteDisplayDataType_descriptor();
inline const ::std::string& RemoteDisplayDataType_Name(RemoteDisplayDataType value) {
  return ::google::protobuf::internal::NameOfEnum(
    RemoteDisplayDataType_descriptor(), value);
}
inline bool RemoteDisplayDataType_Parse(
    const ::std::string& name, RemoteDisplayDataType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RemoteDisplayDataType>(
    RemoteDisplayDataType_descriptor(), name, value);
}
// ===================================================================

class RemoteDisplayConfigRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RemoteDisplayConfigRequest) */ {
 public:
  RemoteDisplayConfigRequest();
  virtual ~RemoteDisplayConfigRequest();

  RemoteDisplayConfigRequest(const RemoteDisplayConfigRequest& from);

  inline RemoteDisplayConfigRequest& operator=(const RemoteDisplayConfigRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RemoteDisplayConfigRequest(RemoteDisplayConfigRequest&& from) noexcept
    : RemoteDisplayConfigRequest() {
    *this = ::std::move(from);
  }

  inline RemoteDisplayConfigRequest& operator=(RemoteDisplayConfigRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RemoteDisplayConfigRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RemoteDisplayConfigRequest* internal_default_instance() {
    return reinterpret_cast<const RemoteDisplayConfigRequest*>(
               &_RemoteDisplayConfigRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(RemoteDisplayConfigRequest* other);
  friend void swap(RemoteDisplayConfigRequest& a, RemoteDisplayConfigRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RemoteDisplayConfigRequest* New() const final {
    return CreateMaybeMessage<RemoteDisplayConfigRequest>(NULL);
  }

  RemoteDisplayConfigRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RemoteDisplayConfigRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RemoteDisplayConfigRequest& from);
  void MergeFrom(const RemoteDisplayConfigRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RemoteDisplayConfigRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .RemoteDisplayDataType type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::RemoteDisplayDataType type() const;
  void set_type(::RemoteDisplayDataType value);

  // int32 width = 2;
  void clear_width();
  static const int kWidthFieldNumber = 2;
  ::google::protobuf::int32 width() const;
  void set_width(::google::protobuf::int32 value);

  // int32 height = 3;
  void clear_height();
  static const int kHeightFieldNumber = 3;
  ::google::protobuf::int32 height() const;
  void set_height(::google::protobuf::int32 value);

  // bool display = 4;
  void clear_display();
  static const int kDisplayFieldNumber = 4;
  bool display() const;
  void set_display(bool value);

  // @@protoc_insertion_point(class_scope:RemoteDisplayConfigRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int type_;
  ::google::protobuf::int32 width_;
  ::google::protobuf::int32 height_;
  bool display_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_remote_5fdisplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RemoteDisplayConfigResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RemoteDisplayConfigResponse) */ {
 public:
  RemoteDisplayConfigResponse();
  virtual ~RemoteDisplayConfigResponse();

  RemoteDisplayConfigResponse(const RemoteDisplayConfigResponse& from);

  inline RemoteDisplayConfigResponse& operator=(const RemoteDisplayConfigResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RemoteDisplayConfigResponse(RemoteDisplayConfigResponse&& from) noexcept
    : RemoteDisplayConfigResponse() {
    *this = ::std::move(from);
  }

  inline RemoteDisplayConfigResponse& operator=(RemoteDisplayConfigResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RemoteDisplayConfigResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RemoteDisplayConfigResponse* internal_default_instance() {
    return reinterpret_cast<const RemoteDisplayConfigResponse*>(
               &_RemoteDisplayConfigResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(RemoteDisplayConfigResponse* other);
  friend void swap(RemoteDisplayConfigResponse& a, RemoteDisplayConfigResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RemoteDisplayConfigResponse* New() const final {
    return CreateMaybeMessage<RemoteDisplayConfigResponse>(NULL);
  }

  RemoteDisplayConfigResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RemoteDisplayConfigResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RemoteDisplayConfigResponse& from);
  void MergeFrom(const RemoteDisplayConfigResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RemoteDisplayConfigResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool success = 1;
  void clear_success();
  static const int kSuccessFieldNumber = 1;
  bool success() const;
  void set_success(bool value);

  // int32 port = 2;
  void clear_port();
  static const int kPortFieldNumber = 2;
  ::google::protobuf::int32 port() const;
  void set_port(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:RemoteDisplayConfigResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool success_;
  ::google::protobuf::int32 port_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_remote_5fdisplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RemoteDisplaySendRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RemoteDisplaySendRequest) */ {
 public:
  RemoteDisplaySendRequest();
  virtual ~RemoteDisplaySendRequest();

  RemoteDisplaySendRequest(const RemoteDisplaySendRequest& from);

  inline RemoteDisplaySendRequest& operator=(const RemoteDisplaySendRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RemoteDisplaySendRequest(RemoteDisplaySendRequest&& from) noexcept
    : RemoteDisplaySendRequest() {
    *this = ::std::move(from);
  }

  inline RemoteDisplaySendRequest& operator=(RemoteDisplaySendRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RemoteDisplaySendRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RemoteDisplaySendRequest* internal_default_instance() {
    return reinterpret_cast<const RemoteDisplaySendRequest*>(
               &_RemoteDisplaySendRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(RemoteDisplaySendRequest* other);
  friend void swap(RemoteDisplaySendRequest& a, RemoteDisplaySendRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RemoteDisplaySendRequest* New() const final {
    return CreateMaybeMessage<RemoteDisplaySendRequest>(NULL);
  }

  RemoteDisplaySendRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RemoteDisplaySendRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RemoteDisplaySendRequest& from);
  void MergeFrom(const RemoteDisplaySendRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RemoteDisplaySendRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes data = 2;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // int64 serial = 1;
  void clear_serial();
  static const int kSerialFieldNumber = 1;
  ::google::protobuf::int64 serial() const;
  void set_serial(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:RemoteDisplaySendRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::google::protobuf::int64 serial_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_remote_5fdisplay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RemoteDisplaySendResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RemoteDisplaySendResponse) */ {
 public:
  RemoteDisplaySendResponse();
  virtual ~RemoteDisplaySendResponse();

  RemoteDisplaySendResponse(const RemoteDisplaySendResponse& from);

  inline RemoteDisplaySendResponse& operator=(const RemoteDisplaySendResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RemoteDisplaySendResponse(RemoteDisplaySendResponse&& from) noexcept
    : RemoteDisplaySendResponse() {
    *this = ::std::move(from);
  }

  inline RemoteDisplaySendResponse& operator=(RemoteDisplaySendResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RemoteDisplaySendResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RemoteDisplaySendResponse* internal_default_instance() {
    return reinterpret_cast<const RemoteDisplaySendResponse*>(
               &_RemoteDisplaySendResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(RemoteDisplaySendResponse* other);
  friend void swap(RemoteDisplaySendResponse& a, RemoteDisplaySendResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RemoteDisplaySendResponse* New() const final {
    return CreateMaybeMessage<RemoteDisplaySendResponse>(NULL);
  }

  RemoteDisplaySendResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RemoteDisplaySendResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RemoteDisplaySendResponse& from);
  void MergeFrom(const RemoteDisplaySendResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RemoteDisplaySendResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 serial = 1;
  void clear_serial();
  static const int kSerialFieldNumber = 1;
  ::google::protobuf::int64 serial() const;
  void set_serial(::google::protobuf::int64 value);

  // bool success = 2;
  void clear_success();
  static const int kSuccessFieldNumber = 2;
  bool success() const;
  void set_success(bool value);

  // @@protoc_insertion_point(class_scope:RemoteDisplaySendResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 serial_;
  bool success_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_remote_5fdisplay_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// RemoteDisplayConfigRequest

// .RemoteDisplayDataType type = 1;
inline void RemoteDisplayConfigRequest::clear_type() {
  type_ = 0;
}
inline ::RemoteDisplayDataType RemoteDisplayConfigRequest::type() const {
  // @@protoc_insertion_point(field_get:RemoteDisplayConfigRequest.type)
  return static_cast< ::RemoteDisplayDataType >(type_);
}
inline void RemoteDisplayConfigRequest::set_type(::RemoteDisplayDataType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:RemoteDisplayConfigRequest.type)
}

// int32 width = 2;
inline void RemoteDisplayConfigRequest::clear_width() {
  width_ = 0;
}
inline ::google::protobuf::int32 RemoteDisplayConfigRequest::width() const {
  // @@protoc_insertion_point(field_get:RemoteDisplayConfigRequest.width)
  return width_;
}
inline void RemoteDisplayConfigRequest::set_width(::google::protobuf::int32 value) {
  
  width_ = value;
  // @@protoc_insertion_point(field_set:RemoteDisplayConfigRequest.width)
}

// int32 height = 3;
inline void RemoteDisplayConfigRequest::clear_height() {
  height_ = 0;
}
inline ::google::protobuf::int32 RemoteDisplayConfigRequest::height() const {
  // @@protoc_insertion_point(field_get:RemoteDisplayConfigRequest.height)
  return height_;
}
inline void RemoteDisplayConfigRequest::set_height(::google::protobuf::int32 value) {
  
  height_ = value;
  // @@protoc_insertion_point(field_set:RemoteDisplayConfigRequest.height)
}

// bool display = 4;
inline void RemoteDisplayConfigRequest::clear_display() {
  display_ = false;
}
inline bool RemoteDisplayConfigRequest::display() const {
  // @@protoc_insertion_point(field_get:RemoteDisplayConfigRequest.display)
  return display_;
}
inline void RemoteDisplayConfigRequest::set_display(bool value) {
  
  display_ = value;
  // @@protoc_insertion_point(field_set:RemoteDisplayConfigRequest.display)
}

// -------------------------------------------------------------------

// RemoteDisplayConfigResponse

// bool success = 1;
inline void RemoteDisplayConfigResponse::clear_success() {
  success_ = false;
}
inline bool RemoteDisplayConfigResponse::success() const {
  // @@protoc_insertion_point(field_get:RemoteDisplayConfigResponse.success)
  return success_;
}
inline void RemoteDisplayConfigResponse::set_success(bool value) {
  
  success_ = value;
  // @@protoc_insertion_point(field_set:RemoteDisplayConfigResponse.success)
}

// int32 port = 2;
inline void RemoteDisplayConfigResponse::clear_port() {
  port_ = 0;
}
inline ::google::protobuf::int32 RemoteDisplayConfigResponse::port() const {
  // @@protoc_insertion_point(field_get:RemoteDisplayConfigResponse.port)
  return port_;
}
inline void RemoteDisplayConfigResponse::set_port(::google::protobuf::int32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:RemoteDisplayConfigResponse.port)
}

// -------------------------------------------------------------------

// RemoteDisplaySendRequest

// int64 serial = 1;
inline void RemoteDisplaySendRequest::clear_serial() {
  serial_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 RemoteDisplaySendRequest::serial() const {
  // @@protoc_insertion_point(field_get:RemoteDisplaySendRequest.serial)
  return serial_;
}
inline void RemoteDisplaySendRequest::set_serial(::google::protobuf::int64 value) {
  
  serial_ = value;
  // @@protoc_insertion_point(field_set:RemoteDisplaySendRequest.serial)
}

// bytes data = 2;
inline void RemoteDisplaySendRequest::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RemoteDisplaySendRequest::data() const {
  // @@protoc_insertion_point(field_get:RemoteDisplaySendRequest.data)
  return data_.GetNoArena();
}
inline void RemoteDisplaySendRequest::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RemoteDisplaySendRequest.data)
}
#if LANG_CXX11
inline void RemoteDisplaySendRequest::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RemoteDisplaySendRequest.data)
}
#endif
inline void RemoteDisplaySendRequest::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RemoteDisplaySendRequest.data)
}
inline void RemoteDisplaySendRequest::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RemoteDisplaySendRequest.data)
}
inline ::std::string* RemoteDisplaySendRequest::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:RemoteDisplaySendRequest.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RemoteDisplaySendRequest::release_data() {
  // @@protoc_insertion_point(field_release:RemoteDisplaySendRequest.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RemoteDisplaySendRequest::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:RemoteDisplaySendRequest.data)
}

// -------------------------------------------------------------------

// RemoteDisplaySendResponse

// int64 serial = 1;
inline void RemoteDisplaySendResponse::clear_serial() {
  serial_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 RemoteDisplaySendResponse::serial() const {
  // @@protoc_insertion_point(field_get:RemoteDisplaySendResponse.serial)
  return serial_;
}
inline void RemoteDisplaySendResponse::set_serial(::google::protobuf::int64 value) {
  
  serial_ = value;
  // @@protoc_insertion_point(field_set:RemoteDisplaySendResponse.serial)
}

// bool success = 2;
inline void RemoteDisplaySendResponse::clear_success() {
  success_ = false;
}
inline bool RemoteDisplaySendResponse::success() const {
  // @@protoc_insertion_point(field_get:RemoteDisplaySendResponse.success)
  return success_;
}
inline void RemoteDisplaySendResponse::set_success(bool value) {
  
  success_ = value;
  // @@protoc_insertion_point(field_set:RemoteDisplaySendResponse.success)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::RemoteDisplayDataType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::RemoteDisplayDataType>() {
  return ::RemoteDisplayDataType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_remote_5fdisplay_2eproto
