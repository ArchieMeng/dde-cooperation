// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: base_message.proto

#ifndef PROTOBUF_INCLUDED_base_5fmessage_2eproto
#define PROTOBUF_INCLUDED_base_5fmessage_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_base_5fmessage_2eproto 

namespace protobuf_base_5fmessage_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_base_5fmessage_2eproto
class BaseMessage;
class BaseMessageDefaultTypeInternal;
extern BaseMessageDefaultTypeInternal _BaseMessage_default_instance_;
namespace google {
namespace protobuf {
template<> ::BaseMessage* Arena::CreateMaybeMessage<::BaseMessage>(Arena*);
}  // namespace protobuf
}  // namespace google

enum MessageType {
  InvalidType = 0,
  ScanRequestType = 1000,
  ScanResponseType = 1001,
  PairRequestType = 1002,
  PairResponseType = 1003,
  StopPairRequestType = 1004,
  StopPairResponseType = 1005,
  SendFileRequestType = 3000,
  SendFileResponseType = 3001,
  SendFileBlockRequestType = 3002,
  SendFileBlockResponseType = 3003,
  StopSendFileRequestType = 3004,
  StopSendFileResponseType = 3005,
  SendDirRequestType = 3006,
  SendDirResponseType = 3007,
  TransferRequestType = 3008,
  TransferResponseType = 3009,
  StopTransferRequestType = 3010,
  StopTransferResponseType = 3011,
  InputEventRequestType = 4000,
  InputEventResponseType = 4001,
  SyncClipboardRequestType = 5000,
  SyncClipboardResponseType = 5001,
  RemoteDisplayConfigRequestType = 6000,
  RemoteDisplayConfigResponseType = 6001,
  RemoteDisplaySendRequestType = 6002,
  RemoteDisplaySendResponseType = 6003,
  MessageType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MessageType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MessageType_IsValid(int value);
const MessageType MessageType_MIN = InvalidType;
const MessageType MessageType_MAX = RemoteDisplaySendResponseType;
const int MessageType_ARRAYSIZE = MessageType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MessageType_descriptor();
inline const ::std::string& MessageType_Name(MessageType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MessageType_descriptor(), value);
}
inline bool MessageType_Parse(
    const ::std::string& name, MessageType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MessageType>(
    MessageType_descriptor(), name, value);
}
// ===================================================================

class BaseMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:BaseMessage) */ {
 public:
  BaseMessage();
  virtual ~BaseMessage();

  BaseMessage(const BaseMessage& from);

  inline BaseMessage& operator=(const BaseMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BaseMessage(BaseMessage&& from) noexcept
    : BaseMessage() {
    *this = ::std::move(from);
  }

  inline BaseMessage& operator=(BaseMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BaseMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BaseMessage* internal_default_instance() {
    return reinterpret_cast<const BaseMessage*>(
               &_BaseMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(BaseMessage* other);
  friend void swap(BaseMessage& a, BaseMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BaseMessage* New() const final {
    return CreateMaybeMessage<BaseMessage>(NULL);
  }

  BaseMessage* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BaseMessage>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BaseMessage& from);
  void MergeFrom(const BaseMessage& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BaseMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // fixed64 size = 2;
  void clear_size();
  static const int kSizeFieldNumber = 2;
  ::google::protobuf::uint64 size() const;
  void set_size(::google::protobuf::uint64 value);

  // fixed32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:BaseMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 size_;
  ::google::protobuf::uint32 type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_base_5fmessage_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// BaseMessage

// fixed32 type = 1;
inline void BaseMessage::clear_type() {
  type_ = 0u;
}
inline ::google::protobuf::uint32 BaseMessage::type() const {
  // @@protoc_insertion_point(field_get:BaseMessage.type)
  return type_;
}
inline void BaseMessage::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:BaseMessage.type)
}

// fixed64 size = 2;
inline void BaseMessage::clear_size() {
  size_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 BaseMessage::size() const {
  // @@protoc_insertion_point(field_get:BaseMessage.size)
  return size_;
}
inline void BaseMessage::set_size(::google::protobuf::uint64 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:BaseMessage.size)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::MessageType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MessageType>() {
  return ::MessageType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_base_5fmessage_2eproto
