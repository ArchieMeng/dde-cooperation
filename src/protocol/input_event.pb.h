// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: input_event.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_input_5fevent_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_input_5fevent_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3012000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3012004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_input_5fevent_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_input_5fevent_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_input_5fevent_2eproto;
class InputEventRequest;
class InputEventRequestDefaultTypeInternal;
extern InputEventRequestDefaultTypeInternal _InputEventRequest_default_instance_;
class InputEventResponse;
class InputEventResponseDefaultTypeInternal;
extern InputEventResponseDefaultTypeInternal _InputEventResponse_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::InputEventRequest* Arena::CreateMaybeMessage<::InputEventRequest>(Arena*);
template<> ::InputEventResponse* Arena::CreateMaybeMessage<::InputEventResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

// ===================================================================

class InputEventRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:InputEventRequest) */ {
 public:
  inline InputEventRequest() : InputEventRequest(nullptr) {};
  virtual ~InputEventRequest();

  InputEventRequest(const InputEventRequest& from);
  InputEventRequest(InputEventRequest&& from) noexcept
    : InputEventRequest() {
    *this = ::std::move(from);
  }

  inline InputEventRequest& operator=(const InputEventRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline InputEventRequest& operator=(InputEventRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const InputEventRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InputEventRequest* internal_default_instance() {
    return reinterpret_cast<const InputEventRequest*>(
               &_InputEventRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(InputEventRequest& a, InputEventRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(InputEventRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InputEventRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline InputEventRequest* New() const final {
    return CreateMaybeMessage<InputEventRequest>(nullptr);
  }

  InputEventRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<InputEventRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const InputEventRequest& from);
  void MergeFrom(const InputEventRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InputEventRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "InputEventRequest";
  }
  protected:
  explicit InputEventRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_input_5fevent_2eproto);
    return ::descriptor_table_input_5fevent_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSerialFieldNumber = 1,
    kTypeFieldNumber = 2,
    kCodeFieldNumber = 3,
    kValueFieldNumber = 4,
  };
  // int64 serial = 1;
  void clear_serial();
  ::PROTOBUF_NAMESPACE_ID::int64 serial() const;
  void set_serial(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_serial() const;
  void _internal_set_serial(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 type = 2;
  void clear_type();
  ::PROTOBUF_NAMESPACE_ID::int32 type() const;
  void set_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_type() const;
  void _internal_set_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 code = 3;
  void clear_code();
  ::PROTOBUF_NAMESPACE_ID::int32 code() const;
  void set_code(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_code() const;
  void _internal_set_code(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 value = 4;
  void clear_value();
  ::PROTOBUF_NAMESPACE_ID::int32 value() const;
  void set_value(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_value() const;
  void _internal_set_value(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:InputEventRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int64 serial_;
  ::PROTOBUF_NAMESPACE_ID::int32 type_;
  ::PROTOBUF_NAMESPACE_ID::int32 code_;
  ::PROTOBUF_NAMESPACE_ID::int32 value_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_input_5fevent_2eproto;
};
// -------------------------------------------------------------------

class InputEventResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:InputEventResponse) */ {
 public:
  inline InputEventResponse() : InputEventResponse(nullptr) {};
  virtual ~InputEventResponse();

  InputEventResponse(const InputEventResponse& from);
  InputEventResponse(InputEventResponse&& from) noexcept
    : InputEventResponse() {
    *this = ::std::move(from);
  }

  inline InputEventResponse& operator=(const InputEventResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline InputEventResponse& operator=(InputEventResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const InputEventResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InputEventResponse* internal_default_instance() {
    return reinterpret_cast<const InputEventResponse*>(
               &_InputEventResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(InputEventResponse& a, InputEventResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(InputEventResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InputEventResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline InputEventResponse* New() const final {
    return CreateMaybeMessage<InputEventResponse>(nullptr);
  }

  InputEventResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<InputEventResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const InputEventResponse& from);
  void MergeFrom(const InputEventResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InputEventResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "InputEventResponse";
  }
  protected:
  explicit InputEventResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_input_5fevent_2eproto);
    return ::descriptor_table_input_5fevent_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSerialFieldNumber = 1,
    kSuccessFieldNumber = 2,
  };
  // int64 serial = 1;
  void clear_serial();
  ::PROTOBUF_NAMESPACE_ID::int64 serial() const;
  void set_serial(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_serial() const;
  void _internal_set_serial(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // bool success = 2;
  void clear_success();
  bool success() const;
  void set_success(bool value);
  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);
  public:

  // @@protoc_insertion_point(class_scope:InputEventResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int64 serial_;
  bool success_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_input_5fevent_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// InputEventRequest

// int64 serial = 1;
inline void InputEventRequest::clear_serial() {
  serial_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 InputEventRequest::_internal_serial() const {
  return serial_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 InputEventRequest::serial() const {
  // @@protoc_insertion_point(field_get:InputEventRequest.serial)
  return _internal_serial();
}
inline void InputEventRequest::_internal_set_serial(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  serial_ = value;
}
inline void InputEventRequest::set_serial(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_serial(value);
  // @@protoc_insertion_point(field_set:InputEventRequest.serial)
}

// int32 type = 2;
inline void InputEventRequest::clear_type() {
  type_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 InputEventRequest::_internal_type() const {
  return type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 InputEventRequest::type() const {
  // @@protoc_insertion_point(field_get:InputEventRequest.type)
  return _internal_type();
}
inline void InputEventRequest::_internal_set_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  type_ = value;
}
inline void InputEventRequest::set_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:InputEventRequest.type)
}

// int32 code = 3;
inline void InputEventRequest::clear_code() {
  code_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 InputEventRequest::_internal_code() const {
  return code_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 InputEventRequest::code() const {
  // @@protoc_insertion_point(field_get:InputEventRequest.code)
  return _internal_code();
}
inline void InputEventRequest::_internal_set_code(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  code_ = value;
}
inline void InputEventRequest::set_code(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_code(value);
  // @@protoc_insertion_point(field_set:InputEventRequest.code)
}

// int32 value = 4;
inline void InputEventRequest::clear_value() {
  value_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 InputEventRequest::_internal_value() const {
  return value_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 InputEventRequest::value() const {
  // @@protoc_insertion_point(field_get:InputEventRequest.value)
  return _internal_value();
}
inline void InputEventRequest::_internal_set_value(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  value_ = value;
}
inline void InputEventRequest::set_value(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:InputEventRequest.value)
}

// -------------------------------------------------------------------

// InputEventResponse

// int64 serial = 1;
inline void InputEventResponse::clear_serial() {
  serial_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 InputEventResponse::_internal_serial() const {
  return serial_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 InputEventResponse::serial() const {
  // @@protoc_insertion_point(field_get:InputEventResponse.serial)
  return _internal_serial();
}
inline void InputEventResponse::_internal_set_serial(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  serial_ = value;
}
inline void InputEventResponse::set_serial(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_serial(value);
  // @@protoc_insertion_point(field_set:InputEventResponse.serial)
}

// bool success = 2;
inline void InputEventResponse::clear_success() {
  success_ = false;
}
inline bool InputEventResponse::_internal_success() const {
  return success_;
}
inline bool InputEventResponse::success() const {
  // @@protoc_insertion_point(field_get:InputEventResponse.success)
  return _internal_success();
}
inline void InputEventResponse::_internal_set_success(bool value) {
  
  success_ = value;
}
inline void InputEventResponse::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:InputEventResponse.success)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_input_5fevent_2eproto
