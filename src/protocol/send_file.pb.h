// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: send_file.proto

#ifndef PROTOBUF_INCLUDED_send_5ffile_2eproto
#define PROTOBUF_INCLUDED_send_5ffile_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_send_5ffile_2eproto 

namespace protobuf_send_5ffile_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[16];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_send_5ffile_2eproto
class AbortSendFileRequest;
class AbortSendFileRequestDefaultTypeInternal;
extern AbortSendFileRequestDefaultTypeInternal _AbortSendFileRequest_default_instance_;
class AbortSendFileResponse;
class AbortSendFileResponseDefaultTypeInternal;
extern AbortSendFileResponseDefaultTypeInternal _AbortSendFileResponse_default_instance_;
class SendDirRequest;
class SendDirRequestDefaultTypeInternal;
extern SendDirRequestDefaultTypeInternal _SendDirRequest_default_instance_;
class SendDirResponse;
class SendDirResponseDefaultTypeInternal;
extern SendDirResponseDefaultTypeInternal _SendDirResponse_default_instance_;
class SendFileBlockRequest;
class SendFileBlockRequestDefaultTypeInternal;
extern SendFileBlockRequestDefaultTypeInternal _SendFileBlockRequest_default_instance_;
class SendFileBlockResponse;
class SendFileBlockResponseDefaultTypeInternal;
extern SendFileBlockResponseDefaultTypeInternal _SendFileBlockResponse_default_instance_;
class SendFileRequest;
class SendFileRequestDefaultTypeInternal;
extern SendFileRequestDefaultTypeInternal _SendFileRequest_default_instance_;
class SendFileResponse;
class SendFileResponseDefaultTypeInternal;
extern SendFileResponseDefaultTypeInternal _SendFileResponse_default_instance_;
class StopSendDirRequest;
class StopSendDirRequestDefaultTypeInternal;
extern StopSendDirRequestDefaultTypeInternal _StopSendDirRequest_default_instance_;
class StopSendDirResponse;
class StopSendDirResponseDefaultTypeInternal;
extern StopSendDirResponseDefaultTypeInternal _StopSendDirResponse_default_instance_;
class StopSendFileRequest;
class StopSendFileRequestDefaultTypeInternal;
extern StopSendFileRequestDefaultTypeInternal _StopSendFileRequest_default_instance_;
class StopSendFileResponse;
class StopSendFileResponseDefaultTypeInternal;
extern StopSendFileResponseDefaultTypeInternal _StopSendFileResponse_default_instance_;
class StopTransferRequest;
class StopTransferRequestDefaultTypeInternal;
extern StopTransferRequestDefaultTypeInternal _StopTransferRequest_default_instance_;
class StopTransferResponse;
class StopTransferResponseDefaultTypeInternal;
extern StopTransferResponseDefaultTypeInternal _StopTransferResponse_default_instance_;
class TransferRequest;
class TransferRequestDefaultTypeInternal;
extern TransferRequestDefaultTypeInternal _TransferRequest_default_instance_;
class TransferResponse;
class TransferResponseDefaultTypeInternal;
extern TransferResponseDefaultTypeInternal _TransferResponse_default_instance_;
namespace google {
namespace protobuf {
template<> ::AbortSendFileRequest* Arena::CreateMaybeMessage<::AbortSendFileRequest>(Arena*);
template<> ::AbortSendFileResponse* Arena::CreateMaybeMessage<::AbortSendFileResponse>(Arena*);
template<> ::SendDirRequest* Arena::CreateMaybeMessage<::SendDirRequest>(Arena*);
template<> ::SendDirResponse* Arena::CreateMaybeMessage<::SendDirResponse>(Arena*);
template<> ::SendFileBlockRequest* Arena::CreateMaybeMessage<::SendFileBlockRequest>(Arena*);
template<> ::SendFileBlockResponse* Arena::CreateMaybeMessage<::SendFileBlockResponse>(Arena*);
template<> ::SendFileRequest* Arena::CreateMaybeMessage<::SendFileRequest>(Arena*);
template<> ::SendFileResponse* Arena::CreateMaybeMessage<::SendFileResponse>(Arena*);
template<> ::StopSendDirRequest* Arena::CreateMaybeMessage<::StopSendDirRequest>(Arena*);
template<> ::StopSendDirResponse* Arena::CreateMaybeMessage<::StopSendDirResponse>(Arena*);
template<> ::StopSendFileRequest* Arena::CreateMaybeMessage<::StopSendFileRequest>(Arena*);
template<> ::StopSendFileResponse* Arena::CreateMaybeMessage<::StopSendFileResponse>(Arena*);
template<> ::StopTransferRequest* Arena::CreateMaybeMessage<::StopTransferRequest>(Arena*);
template<> ::StopTransferResponse* Arena::CreateMaybeMessage<::StopTransferResponse>(Arena*);
template<> ::TransferRequest* Arena::CreateMaybeMessage<::TransferRequest>(Arena*);
template<> ::TransferResponse* Arena::CreateMaybeMessage<::TransferResponse>(Arena*);
}  // namespace protobuf
}  // namespace google

// ===================================================================

class TransferRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TransferRequest) */ {
 public:
  TransferRequest();
  virtual ~TransferRequest();

  TransferRequest(const TransferRequest& from);

  inline TransferRequest& operator=(const TransferRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TransferRequest(TransferRequest&& from) noexcept
    : TransferRequest() {
    *this = ::std::move(from);
  }

  inline TransferRequest& operator=(TransferRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TransferRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TransferRequest* internal_default_instance() {
    return reinterpret_cast<const TransferRequest*>(
               &_TransferRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(TransferRequest* other);
  friend void swap(TransferRequest& a, TransferRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TransferRequest* New() const final {
    return CreateMaybeMessage<TransferRequest>(NULL);
  }

  TransferRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TransferRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TransferRequest& from);
  void MergeFrom(const TransferRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TransferRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // @@protoc_insertion_point(class_scope:TransferRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_send_5ffile_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TransferResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TransferResponse) */ {
 public:
  TransferResponse();
  virtual ~TransferResponse();

  TransferResponse(const TransferResponse& from);

  inline TransferResponse& operator=(const TransferResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TransferResponse(TransferResponse&& from) noexcept
    : TransferResponse() {
    *this = ::std::move(from);
  }

  inline TransferResponse& operator=(TransferResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TransferResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TransferResponse* internal_default_instance() {
    return reinterpret_cast<const TransferResponse*>(
               &_TransferResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(TransferResponse* other);
  friend void swap(TransferResponse& a, TransferResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TransferResponse* New() const final {
    return CreateMaybeMessage<TransferResponse>(NULL);
  }

  TransferResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TransferResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TransferResponse& from);
  void MergeFrom(const TransferResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TransferResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // int32 port = 2;
  void clear_port();
  static const int kPortFieldNumber = 2;
  ::google::protobuf::int32 port() const;
  void set_port(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TransferResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::int32 port_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_send_5ffile_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StopTransferRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:StopTransferRequest) */ {
 public:
  StopTransferRequest();
  virtual ~StopTransferRequest();

  StopTransferRequest(const StopTransferRequest& from);

  inline StopTransferRequest& operator=(const StopTransferRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StopTransferRequest(StopTransferRequest&& from) noexcept
    : StopTransferRequest() {
    *this = ::std::move(from);
  }

  inline StopTransferRequest& operator=(StopTransferRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StopTransferRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StopTransferRequest* internal_default_instance() {
    return reinterpret_cast<const StopTransferRequest*>(
               &_StopTransferRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(StopTransferRequest* other);
  friend void swap(StopTransferRequest& a, StopTransferRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StopTransferRequest* New() const final {
    return CreateMaybeMessage<StopTransferRequest>(NULL);
  }

  StopTransferRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StopTransferRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StopTransferRequest& from);
  void MergeFrom(const StopTransferRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StopTransferRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // @@protoc_insertion_point(class_scope:StopTransferRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_send_5ffile_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StopTransferResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:StopTransferResponse) */ {
 public:
  StopTransferResponse();
  virtual ~StopTransferResponse();

  StopTransferResponse(const StopTransferResponse& from);

  inline StopTransferResponse& operator=(const StopTransferResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StopTransferResponse(StopTransferResponse&& from) noexcept
    : StopTransferResponse() {
    *this = ::std::move(from);
  }

  inline StopTransferResponse& operator=(StopTransferResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StopTransferResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StopTransferResponse* internal_default_instance() {
    return reinterpret_cast<const StopTransferResponse*>(
               &_StopTransferResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(StopTransferResponse* other);
  friend void swap(StopTransferResponse& a, StopTransferResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StopTransferResponse* New() const final {
    return CreateMaybeMessage<StopTransferResponse>(NULL);
  }

  StopTransferResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StopTransferResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StopTransferResponse& from);
  void MergeFrom(const StopTransferResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StopTransferResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // @@protoc_insertion_point(class_scope:StopTransferResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_send_5ffile_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SendFileRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SendFileRequest) */ {
 public:
  SendFileRequest();
  virtual ~SendFileRequest();

  SendFileRequest(const SendFileRequest& from);

  inline SendFileRequest& operator=(const SendFileRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SendFileRequest(SendFileRequest&& from) noexcept
    : SendFileRequest() {
    *this = ::std::move(from);
  }

  inline SendFileRequest& operator=(SendFileRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SendFileRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SendFileRequest* internal_default_instance() {
    return reinterpret_cast<const SendFileRequest*>(
               &_SendFileRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(SendFileRequest* other);
  friend void swap(SendFileRequest& a, SendFileRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SendFileRequest* New() const final {
    return CreateMaybeMessage<SendFileRequest>(NULL);
  }

  SendFileRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SendFileRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SendFileRequest& from);
  void MergeFrom(const SendFileRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SendFileRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string file_name = 1;
  void clear_file_name();
  static const int kFileNameFieldNumber = 1;
  const ::std::string& file_name() const;
  void set_file_name(const ::std::string& value);
  #if LANG_CXX11
  void set_file_name(::std::string&& value);
  #endif
  void set_file_name(const char* value);
  void set_file_name(const char* value, size_t size);
  ::std::string* mutable_file_name();
  ::std::string* release_file_name();
  void set_allocated_file_name(::std::string* file_name);

  // int32 parent_id = 2;
  void clear_parent_id();
  static const int kParentIdFieldNumber = 2;
  ::google::protobuf::int32 parent_id() const;
  void set_parent_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SendFileRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr file_name_;
  ::google::protobuf::int32 parent_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_send_5ffile_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SendFileResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SendFileResponse) */ {
 public:
  SendFileResponse();
  virtual ~SendFileResponse();

  SendFileResponse(const SendFileResponse& from);

  inline SendFileResponse& operator=(const SendFileResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SendFileResponse(SendFileResponse&& from) noexcept
    : SendFileResponse() {
    *this = ::std::move(from);
  }

  inline SendFileResponse& operator=(SendFileResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SendFileResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SendFileResponse* internal_default_instance() {
    return reinterpret_cast<const SendFileResponse*>(
               &_SendFileResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(SendFileResponse* other);
  friend void swap(SendFileResponse& a, SendFileResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SendFileResponse* New() const final {
    return CreateMaybeMessage<SendFileResponse>(NULL);
  }

  SendFileResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SendFileResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SendFileResponse& from);
  void MergeFrom(const SendFileResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SendFileResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string file_name = 1;
  void clear_file_name();
  static const int kFileNameFieldNumber = 1;
  const ::std::string& file_name() const;
  void set_file_name(const ::std::string& value);
  #if LANG_CXX11
  void set_file_name(::std::string&& value);
  #endif
  void set_file_name(const char* value);
  void set_file_name(const char* value, size_t size);
  ::std::string* mutable_file_name();
  ::std::string* release_file_name();
  void set_allocated_file_name(::std::string* file_name);

  // int32 file_id = 2;
  void clear_file_id();
  static const int kFileIdFieldNumber = 2;
  ::google::protobuf::int32 file_id() const;
  void set_file_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SendFileResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr file_name_;
  ::google::protobuf::int32 file_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_send_5ffile_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SendFileBlockRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SendFileBlockRequest) */ {
 public:
  SendFileBlockRequest();
  virtual ~SendFileBlockRequest();

  SendFileBlockRequest(const SendFileBlockRequest& from);

  inline SendFileBlockRequest& operator=(const SendFileBlockRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SendFileBlockRequest(SendFileBlockRequest&& from) noexcept
    : SendFileBlockRequest() {
    *this = ::std::move(from);
  }

  inline SendFileBlockRequest& operator=(SendFileBlockRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SendFileBlockRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SendFileBlockRequest* internal_default_instance() {
    return reinterpret_cast<const SendFileBlockRequest*>(
               &_SendFileBlockRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(SendFileBlockRequest* other);
  friend void swap(SendFileBlockRequest& a, SendFileBlockRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SendFileBlockRequest* New() const final {
    return CreateMaybeMessage<SendFileBlockRequest>(NULL);
  }

  SendFileBlockRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SendFileBlockRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SendFileBlockRequest& from);
  void MergeFrom(const SendFileBlockRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SendFileBlockRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes block_data = 5;
  void clear_block_data();
  static const int kBlockDataFieldNumber = 5;
  const ::std::string& block_data() const;
  void set_block_data(const ::std::string& value);
  #if LANG_CXX11
  void set_block_data(::std::string&& value);
  #endif
  void set_block_data(const char* value);
  void set_block_data(const void* value, size_t size);
  ::std::string* mutable_block_data();
  ::std::string* release_block_data();
  void set_allocated_block_data(::std::string* block_data);

  // int64 block_serial = 2;
  void clear_block_serial();
  static const int kBlockSerialFieldNumber = 2;
  ::google::protobuf::int64 block_serial() const;
  void set_block_serial(::google::protobuf::int64 value);

  // int64 block_pos = 3;
  void clear_block_pos();
  static const int kBlockPosFieldNumber = 3;
  ::google::protobuf::int64 block_pos() const;
  void set_block_pos(::google::protobuf::int64 value);

  // int64 block_size = 4;
  void clear_block_size();
  static const int kBlockSizeFieldNumber = 4;
  ::google::protobuf::int64 block_size() const;
  void set_block_size(::google::protobuf::int64 value);

  // int32 file_id = 1;
  void clear_file_id();
  static const int kFileIdFieldNumber = 1;
  ::google::protobuf::int32 file_id() const;
  void set_file_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SendFileBlockRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr block_data_;
  ::google::protobuf::int64 block_serial_;
  ::google::protobuf::int64 block_pos_;
  ::google::protobuf::int64 block_size_;
  ::google::protobuf::int32 file_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_send_5ffile_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SendFileBlockResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SendFileBlockResponse) */ {
 public:
  SendFileBlockResponse();
  virtual ~SendFileBlockResponse();

  SendFileBlockResponse(const SendFileBlockResponse& from);

  inline SendFileBlockResponse& operator=(const SendFileBlockResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SendFileBlockResponse(SendFileBlockResponse&& from) noexcept
    : SendFileBlockResponse() {
    *this = ::std::move(from);
  }

  inline SendFileBlockResponse& operator=(SendFileBlockResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SendFileBlockResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SendFileBlockResponse* internal_default_instance() {
    return reinterpret_cast<const SendFileBlockResponse*>(
               &_SendFileBlockResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(SendFileBlockResponse* other);
  friend void swap(SendFileBlockResponse& a, SendFileBlockResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SendFileBlockResponse* New() const final {
    return CreateMaybeMessage<SendFileBlockResponse>(NULL);
  }

  SendFileBlockResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SendFileBlockResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SendFileBlockResponse& from);
  void MergeFrom(const SendFileBlockResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SendFileBlockResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 block_serial = 2;
  void clear_block_serial();
  static const int kBlockSerialFieldNumber = 2;
  ::google::protobuf::int64 block_serial() const;
  void set_block_serial(::google::protobuf::int64 value);

  // int32 file_id = 1;
  void clear_file_id();
  static const int kFileIdFieldNumber = 1;
  ::google::protobuf::int32 file_id() const;
  void set_file_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SendFileBlockResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 block_serial_;
  ::google::protobuf::int32 file_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_send_5ffile_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StopSendFileRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:StopSendFileRequest) */ {
 public:
  StopSendFileRequest();
  virtual ~StopSendFileRequest();

  StopSendFileRequest(const StopSendFileRequest& from);

  inline StopSendFileRequest& operator=(const StopSendFileRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StopSendFileRequest(StopSendFileRequest&& from) noexcept
    : StopSendFileRequest() {
    *this = ::std::move(from);
  }

  inline StopSendFileRequest& operator=(StopSendFileRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StopSendFileRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StopSendFileRequest* internal_default_instance() {
    return reinterpret_cast<const StopSendFileRequest*>(
               &_StopSendFileRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(StopSendFileRequest* other);
  friend void swap(StopSendFileRequest& a, StopSendFileRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StopSendFileRequest* New() const final {
    return CreateMaybeMessage<StopSendFileRequest>(NULL);
  }

  StopSendFileRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StopSendFileRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StopSendFileRequest& from);
  void MergeFrom(const StopSendFileRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StopSendFileRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string file_sha256 = 2;
  void clear_file_sha256();
  static const int kFileSha256FieldNumber = 2;
  const ::std::string& file_sha256() const;
  void set_file_sha256(const ::std::string& value);
  #if LANG_CXX11
  void set_file_sha256(::std::string&& value);
  #endif
  void set_file_sha256(const char* value);
  void set_file_sha256(const char* value, size_t size);
  ::std::string* mutable_file_sha256();
  ::std::string* release_file_sha256();
  void set_allocated_file_sha256(::std::string* file_sha256);

  // int32 file_id = 1;
  void clear_file_id();
  static const int kFileIdFieldNumber = 1;
  ::google::protobuf::int32 file_id() const;
  void set_file_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:StopSendFileRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr file_sha256_;
  ::google::protobuf::int32 file_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_send_5ffile_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StopSendFileResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:StopSendFileResponse) */ {
 public:
  StopSendFileResponse();
  virtual ~StopSendFileResponse();

  StopSendFileResponse(const StopSendFileResponse& from);

  inline StopSendFileResponse& operator=(const StopSendFileResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StopSendFileResponse(StopSendFileResponse&& from) noexcept
    : StopSendFileResponse() {
    *this = ::std::move(from);
  }

  inline StopSendFileResponse& operator=(StopSendFileResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StopSendFileResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StopSendFileResponse* internal_default_instance() {
    return reinterpret_cast<const StopSendFileResponse*>(
               &_StopSendFileResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(StopSendFileResponse* other);
  friend void swap(StopSendFileResponse& a, StopSendFileResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StopSendFileResponse* New() const final {
    return CreateMaybeMessage<StopSendFileResponse>(NULL);
  }

  StopSendFileResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StopSendFileResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StopSendFileResponse& from);
  void MergeFrom(const StopSendFileResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StopSendFileResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string file_name = 1;
  void clear_file_name();
  static const int kFileNameFieldNumber = 1;
  const ::std::string& file_name() const;
  void set_file_name(const ::std::string& value);
  #if LANG_CXX11
  void set_file_name(::std::string&& value);
  #endif
  void set_file_name(const char* value);
  void set_file_name(const char* value, size_t size);
  ::std::string* mutable_file_name();
  ::std::string* release_file_name();
  void set_allocated_file_name(::std::string* file_name);

  // string file_sha256 = 2;
  void clear_file_sha256();
  static const int kFileSha256FieldNumber = 2;
  const ::std::string& file_sha256() const;
  void set_file_sha256(const ::std::string& value);
  #if LANG_CXX11
  void set_file_sha256(::std::string&& value);
  #endif
  void set_file_sha256(const char* value);
  void set_file_sha256(const char* value, size_t size);
  ::std::string* mutable_file_sha256();
  ::std::string* release_file_sha256();
  void set_allocated_file_sha256(::std::string* file_sha256);

  // bool correct = 3;
  void clear_correct();
  static const int kCorrectFieldNumber = 3;
  bool correct() const;
  void set_correct(bool value);

  // @@protoc_insertion_point(class_scope:StopSendFileResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr file_name_;
  ::google::protobuf::internal::ArenaStringPtr file_sha256_;
  bool correct_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_send_5ffile_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SendDirRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SendDirRequest) */ {
 public:
  SendDirRequest();
  virtual ~SendDirRequest();

  SendDirRequest(const SendDirRequest& from);

  inline SendDirRequest& operator=(const SendDirRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SendDirRequest(SendDirRequest&& from) noexcept
    : SendDirRequest() {
    *this = ::std::move(from);
  }

  inline SendDirRequest& operator=(SendDirRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SendDirRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SendDirRequest* internal_default_instance() {
    return reinterpret_cast<const SendDirRequest*>(
               &_SendDirRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(SendDirRequest* other);
  friend void swap(SendDirRequest& a, SendDirRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SendDirRequest* New() const final {
    return CreateMaybeMessage<SendDirRequest>(NULL);
  }

  SendDirRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SendDirRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SendDirRequest& from);
  void MergeFrom(const SendDirRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SendDirRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string dir_name = 1;
  void clear_dir_name();
  static const int kDirNameFieldNumber = 1;
  const ::std::string& dir_name() const;
  void set_dir_name(const ::std::string& value);
  #if LANG_CXX11
  void set_dir_name(::std::string&& value);
  #endif
  void set_dir_name(const char* value);
  void set_dir_name(const char* value, size_t size);
  ::std::string* mutable_dir_name();
  ::std::string* release_dir_name();
  void set_allocated_dir_name(::std::string* dir_name);

  // int32 parent_id = 2;
  void clear_parent_id();
  static const int kParentIdFieldNumber = 2;
  ::google::protobuf::int32 parent_id() const;
  void set_parent_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SendDirRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr dir_name_;
  ::google::protobuf::int32 parent_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_send_5ffile_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SendDirResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SendDirResponse) */ {
 public:
  SendDirResponse();
  virtual ~SendDirResponse();

  SendDirResponse(const SendDirResponse& from);

  inline SendDirResponse& operator=(const SendDirResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SendDirResponse(SendDirResponse&& from) noexcept
    : SendDirResponse() {
    *this = ::std::move(from);
  }

  inline SendDirResponse& operator=(SendDirResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SendDirResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SendDirResponse* internal_default_instance() {
    return reinterpret_cast<const SendDirResponse*>(
               &_SendDirResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(SendDirResponse* other);
  friend void swap(SendDirResponse& a, SendDirResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SendDirResponse* New() const final {
    return CreateMaybeMessage<SendDirResponse>(NULL);
  }

  SendDirResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SendDirResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SendDirResponse& from);
  void MergeFrom(const SendDirResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SendDirResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string dir_name = 1;
  void clear_dir_name();
  static const int kDirNameFieldNumber = 1;
  const ::std::string& dir_name() const;
  void set_dir_name(const ::std::string& value);
  #if LANG_CXX11
  void set_dir_name(::std::string&& value);
  #endif
  void set_dir_name(const char* value);
  void set_dir_name(const char* value, size_t size);
  ::std::string* mutable_dir_name();
  ::std::string* release_dir_name();
  void set_allocated_dir_name(::std::string* dir_name);

  // int32 dir_id = 2;
  void clear_dir_id();
  static const int kDirIdFieldNumber = 2;
  ::google::protobuf::int32 dir_id() const;
  void set_dir_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SendDirResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr dir_name_;
  ::google::protobuf::int32 dir_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_send_5ffile_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StopSendDirRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:StopSendDirRequest) */ {
 public:
  StopSendDirRequest();
  virtual ~StopSendDirRequest();

  StopSendDirRequest(const StopSendDirRequest& from);

  inline StopSendDirRequest& operator=(const StopSendDirRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StopSendDirRequest(StopSendDirRequest&& from) noexcept
    : StopSendDirRequest() {
    *this = ::std::move(from);
  }

  inline StopSendDirRequest& operator=(StopSendDirRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StopSendDirRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StopSendDirRequest* internal_default_instance() {
    return reinterpret_cast<const StopSendDirRequest*>(
               &_StopSendDirRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(StopSendDirRequest* other);
  friend void swap(StopSendDirRequest& a, StopSendDirRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StopSendDirRequest* New() const final {
    return CreateMaybeMessage<StopSendDirRequest>(NULL);
  }

  StopSendDirRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StopSendDirRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StopSendDirRequest& from);
  void MergeFrom(const StopSendDirRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StopSendDirRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string dir_id = 1;
  void clear_dir_id();
  static const int kDirIdFieldNumber = 1;
  const ::std::string& dir_id() const;
  void set_dir_id(const ::std::string& value);
  #if LANG_CXX11
  void set_dir_id(::std::string&& value);
  #endif
  void set_dir_id(const char* value);
  void set_dir_id(const char* value, size_t size);
  ::std::string* mutable_dir_id();
  ::std::string* release_dir_id();
  void set_allocated_dir_id(::std::string* dir_id);

  // @@protoc_insertion_point(class_scope:StopSendDirRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr dir_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_send_5ffile_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StopSendDirResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:StopSendDirResponse) */ {
 public:
  StopSendDirResponse();
  virtual ~StopSendDirResponse();

  StopSendDirResponse(const StopSendDirResponse& from);

  inline StopSendDirResponse& operator=(const StopSendDirResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StopSendDirResponse(StopSendDirResponse&& from) noexcept
    : StopSendDirResponse() {
    *this = ::std::move(from);
  }

  inline StopSendDirResponse& operator=(StopSendDirResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StopSendDirResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StopSendDirResponse* internal_default_instance() {
    return reinterpret_cast<const StopSendDirResponse*>(
               &_StopSendDirResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(StopSendDirResponse* other);
  friend void swap(StopSendDirResponse& a, StopSendDirResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StopSendDirResponse* New() const final {
    return CreateMaybeMessage<StopSendDirResponse>(NULL);
  }

  StopSendDirResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StopSendDirResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StopSendDirResponse& from);
  void MergeFrom(const StopSendDirResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StopSendDirResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 dir_id = 1;
  void clear_dir_id();
  static const int kDirIdFieldNumber = 1;
  ::google::protobuf::int32 dir_id() const;
  void set_dir_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:StopSendDirResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 dir_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_send_5ffile_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AbortSendFileRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AbortSendFileRequest) */ {
 public:
  AbortSendFileRequest();
  virtual ~AbortSendFileRequest();

  AbortSendFileRequest(const AbortSendFileRequest& from);

  inline AbortSendFileRequest& operator=(const AbortSendFileRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AbortSendFileRequest(AbortSendFileRequest&& from) noexcept
    : AbortSendFileRequest() {
    *this = ::std::move(from);
  }

  inline AbortSendFileRequest& operator=(AbortSendFileRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AbortSendFileRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AbortSendFileRequest* internal_default_instance() {
    return reinterpret_cast<const AbortSendFileRequest*>(
               &_AbortSendFileRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(AbortSendFileRequest* other);
  friend void swap(AbortSendFileRequest& a, AbortSendFileRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AbortSendFileRequest* New() const final {
    return CreateMaybeMessage<AbortSendFileRequest>(NULL);
  }

  AbortSendFileRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AbortSendFileRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AbortSendFileRequest& from);
  void MergeFrom(const AbortSendFileRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AbortSendFileRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 file_id = 1;
  void clear_file_id();
  static const int kFileIdFieldNumber = 1;
  ::google::protobuf::int32 file_id() const;
  void set_file_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:AbortSendFileRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 file_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_send_5ffile_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AbortSendFileResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AbortSendFileResponse) */ {
 public:
  AbortSendFileResponse();
  virtual ~AbortSendFileResponse();

  AbortSendFileResponse(const AbortSendFileResponse& from);

  inline AbortSendFileResponse& operator=(const AbortSendFileResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AbortSendFileResponse(AbortSendFileResponse&& from) noexcept
    : AbortSendFileResponse() {
    *this = ::std::move(from);
  }

  inline AbortSendFileResponse& operator=(AbortSendFileResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AbortSendFileResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AbortSendFileResponse* internal_default_instance() {
    return reinterpret_cast<const AbortSendFileResponse*>(
               &_AbortSendFileResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(AbortSendFileResponse* other);
  friend void swap(AbortSendFileResponse& a, AbortSendFileResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AbortSendFileResponse* New() const final {
    return CreateMaybeMessage<AbortSendFileResponse>(NULL);
  }

  AbortSendFileResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AbortSendFileResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AbortSendFileResponse& from);
  void MergeFrom(const AbortSendFileResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AbortSendFileResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 file_id = 1;
  void clear_file_id();
  static const int kFileIdFieldNumber = 1;
  ::google::protobuf::int32 file_id() const;
  void set_file_id(::google::protobuf::int32 value);

  // bool success = 2;
  void clear_success();
  static const int kSuccessFieldNumber = 2;
  bool success() const;
  void set_success(bool value);

  // @@protoc_insertion_point(class_scope:AbortSendFileResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 file_id_;
  bool success_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_send_5ffile_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// TransferRequest

// string key = 1;
inline void TransferRequest::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TransferRequest::key() const {
  // @@protoc_insertion_point(field_get:TransferRequest.key)
  return key_.GetNoArena();
}
inline void TransferRequest::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TransferRequest.key)
}
#if LANG_CXX11
inline void TransferRequest::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TransferRequest.key)
}
#endif
inline void TransferRequest::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TransferRequest.key)
}
inline void TransferRequest::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TransferRequest.key)
}
inline ::std::string* TransferRequest::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:TransferRequest.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TransferRequest::release_key() {
  // @@protoc_insertion_point(field_release:TransferRequest.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TransferRequest::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:TransferRequest.key)
}

// -------------------------------------------------------------------

// TransferResponse

// string key = 1;
inline void TransferResponse::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TransferResponse::key() const {
  // @@protoc_insertion_point(field_get:TransferResponse.key)
  return key_.GetNoArena();
}
inline void TransferResponse::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TransferResponse.key)
}
#if LANG_CXX11
inline void TransferResponse::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TransferResponse.key)
}
#endif
inline void TransferResponse::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TransferResponse.key)
}
inline void TransferResponse::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TransferResponse.key)
}
inline ::std::string* TransferResponse::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:TransferResponse.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TransferResponse::release_key() {
  // @@protoc_insertion_point(field_release:TransferResponse.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TransferResponse::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:TransferResponse.key)
}

// int32 port = 2;
inline void TransferResponse::clear_port() {
  port_ = 0;
}
inline ::google::protobuf::int32 TransferResponse::port() const {
  // @@protoc_insertion_point(field_get:TransferResponse.port)
  return port_;
}
inline void TransferResponse::set_port(::google::protobuf::int32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:TransferResponse.port)
}

// -------------------------------------------------------------------

// StopTransferRequest

// string key = 1;
inline void StopTransferRequest::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StopTransferRequest::key() const {
  // @@protoc_insertion_point(field_get:StopTransferRequest.key)
  return key_.GetNoArena();
}
inline void StopTransferRequest::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:StopTransferRequest.key)
}
#if LANG_CXX11
inline void StopTransferRequest::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:StopTransferRequest.key)
}
#endif
inline void StopTransferRequest::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:StopTransferRequest.key)
}
inline void StopTransferRequest::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:StopTransferRequest.key)
}
inline ::std::string* StopTransferRequest::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:StopTransferRequest.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StopTransferRequest::release_key() {
  // @@protoc_insertion_point(field_release:StopTransferRequest.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StopTransferRequest::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:StopTransferRequest.key)
}

// -------------------------------------------------------------------

// StopTransferResponse

// string key = 1;
inline void StopTransferResponse::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StopTransferResponse::key() const {
  // @@protoc_insertion_point(field_get:StopTransferResponse.key)
  return key_.GetNoArena();
}
inline void StopTransferResponse::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:StopTransferResponse.key)
}
#if LANG_CXX11
inline void StopTransferResponse::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:StopTransferResponse.key)
}
#endif
inline void StopTransferResponse::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:StopTransferResponse.key)
}
inline void StopTransferResponse::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:StopTransferResponse.key)
}
inline ::std::string* StopTransferResponse::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:StopTransferResponse.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StopTransferResponse::release_key() {
  // @@protoc_insertion_point(field_release:StopTransferResponse.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StopTransferResponse::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:StopTransferResponse.key)
}

// -------------------------------------------------------------------

// SendFileRequest

// string file_name = 1;
inline void SendFileRequest::clear_file_name() {
  file_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SendFileRequest::file_name() const {
  // @@protoc_insertion_point(field_get:SendFileRequest.file_name)
  return file_name_.GetNoArena();
}
inline void SendFileRequest::set_file_name(const ::std::string& value) {
  
  file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SendFileRequest.file_name)
}
#if LANG_CXX11
inline void SendFileRequest::set_file_name(::std::string&& value) {
  
  file_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SendFileRequest.file_name)
}
#endif
inline void SendFileRequest::set_file_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SendFileRequest.file_name)
}
inline void SendFileRequest::set_file_name(const char* value, size_t size) {
  
  file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SendFileRequest.file_name)
}
inline ::std::string* SendFileRequest::mutable_file_name() {
  
  // @@protoc_insertion_point(field_mutable:SendFileRequest.file_name)
  return file_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendFileRequest::release_file_name() {
  // @@protoc_insertion_point(field_release:SendFileRequest.file_name)
  
  return file_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendFileRequest::set_allocated_file_name(::std::string* file_name) {
  if (file_name != NULL) {
    
  } else {
    
  }
  file_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file_name);
  // @@protoc_insertion_point(field_set_allocated:SendFileRequest.file_name)
}

// int32 parent_id = 2;
inline void SendFileRequest::clear_parent_id() {
  parent_id_ = 0;
}
inline ::google::protobuf::int32 SendFileRequest::parent_id() const {
  // @@protoc_insertion_point(field_get:SendFileRequest.parent_id)
  return parent_id_;
}
inline void SendFileRequest::set_parent_id(::google::protobuf::int32 value) {
  
  parent_id_ = value;
  // @@protoc_insertion_point(field_set:SendFileRequest.parent_id)
}

// -------------------------------------------------------------------

// SendFileResponse

// string file_name = 1;
inline void SendFileResponse::clear_file_name() {
  file_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SendFileResponse::file_name() const {
  // @@protoc_insertion_point(field_get:SendFileResponse.file_name)
  return file_name_.GetNoArena();
}
inline void SendFileResponse::set_file_name(const ::std::string& value) {
  
  file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SendFileResponse.file_name)
}
#if LANG_CXX11
inline void SendFileResponse::set_file_name(::std::string&& value) {
  
  file_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SendFileResponse.file_name)
}
#endif
inline void SendFileResponse::set_file_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SendFileResponse.file_name)
}
inline void SendFileResponse::set_file_name(const char* value, size_t size) {
  
  file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SendFileResponse.file_name)
}
inline ::std::string* SendFileResponse::mutable_file_name() {
  
  // @@protoc_insertion_point(field_mutable:SendFileResponse.file_name)
  return file_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendFileResponse::release_file_name() {
  // @@protoc_insertion_point(field_release:SendFileResponse.file_name)
  
  return file_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendFileResponse::set_allocated_file_name(::std::string* file_name) {
  if (file_name != NULL) {
    
  } else {
    
  }
  file_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file_name);
  // @@protoc_insertion_point(field_set_allocated:SendFileResponse.file_name)
}

// int32 file_id = 2;
inline void SendFileResponse::clear_file_id() {
  file_id_ = 0;
}
inline ::google::protobuf::int32 SendFileResponse::file_id() const {
  // @@protoc_insertion_point(field_get:SendFileResponse.file_id)
  return file_id_;
}
inline void SendFileResponse::set_file_id(::google::protobuf::int32 value) {
  
  file_id_ = value;
  // @@protoc_insertion_point(field_set:SendFileResponse.file_id)
}

// -------------------------------------------------------------------

// SendFileBlockRequest

// int32 file_id = 1;
inline void SendFileBlockRequest::clear_file_id() {
  file_id_ = 0;
}
inline ::google::protobuf::int32 SendFileBlockRequest::file_id() const {
  // @@protoc_insertion_point(field_get:SendFileBlockRequest.file_id)
  return file_id_;
}
inline void SendFileBlockRequest::set_file_id(::google::protobuf::int32 value) {
  
  file_id_ = value;
  // @@protoc_insertion_point(field_set:SendFileBlockRequest.file_id)
}

// int64 block_serial = 2;
inline void SendFileBlockRequest::clear_block_serial() {
  block_serial_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SendFileBlockRequest::block_serial() const {
  // @@protoc_insertion_point(field_get:SendFileBlockRequest.block_serial)
  return block_serial_;
}
inline void SendFileBlockRequest::set_block_serial(::google::protobuf::int64 value) {
  
  block_serial_ = value;
  // @@protoc_insertion_point(field_set:SendFileBlockRequest.block_serial)
}

// int64 block_pos = 3;
inline void SendFileBlockRequest::clear_block_pos() {
  block_pos_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SendFileBlockRequest::block_pos() const {
  // @@protoc_insertion_point(field_get:SendFileBlockRequest.block_pos)
  return block_pos_;
}
inline void SendFileBlockRequest::set_block_pos(::google::protobuf::int64 value) {
  
  block_pos_ = value;
  // @@protoc_insertion_point(field_set:SendFileBlockRequest.block_pos)
}

// int64 block_size = 4;
inline void SendFileBlockRequest::clear_block_size() {
  block_size_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SendFileBlockRequest::block_size() const {
  // @@protoc_insertion_point(field_get:SendFileBlockRequest.block_size)
  return block_size_;
}
inline void SendFileBlockRequest::set_block_size(::google::protobuf::int64 value) {
  
  block_size_ = value;
  // @@protoc_insertion_point(field_set:SendFileBlockRequest.block_size)
}

// bytes block_data = 5;
inline void SendFileBlockRequest::clear_block_data() {
  block_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SendFileBlockRequest::block_data() const {
  // @@protoc_insertion_point(field_get:SendFileBlockRequest.block_data)
  return block_data_.GetNoArena();
}
inline void SendFileBlockRequest::set_block_data(const ::std::string& value) {
  
  block_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SendFileBlockRequest.block_data)
}
#if LANG_CXX11
inline void SendFileBlockRequest::set_block_data(::std::string&& value) {
  
  block_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SendFileBlockRequest.block_data)
}
#endif
inline void SendFileBlockRequest::set_block_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  block_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SendFileBlockRequest.block_data)
}
inline void SendFileBlockRequest::set_block_data(const void* value, size_t size) {
  
  block_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SendFileBlockRequest.block_data)
}
inline ::std::string* SendFileBlockRequest::mutable_block_data() {
  
  // @@protoc_insertion_point(field_mutable:SendFileBlockRequest.block_data)
  return block_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendFileBlockRequest::release_block_data() {
  // @@protoc_insertion_point(field_release:SendFileBlockRequest.block_data)
  
  return block_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendFileBlockRequest::set_allocated_block_data(::std::string* block_data) {
  if (block_data != NULL) {
    
  } else {
    
  }
  block_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), block_data);
  // @@protoc_insertion_point(field_set_allocated:SendFileBlockRequest.block_data)
}

// -------------------------------------------------------------------

// SendFileBlockResponse

// int32 file_id = 1;
inline void SendFileBlockResponse::clear_file_id() {
  file_id_ = 0;
}
inline ::google::protobuf::int32 SendFileBlockResponse::file_id() const {
  // @@protoc_insertion_point(field_get:SendFileBlockResponse.file_id)
  return file_id_;
}
inline void SendFileBlockResponse::set_file_id(::google::protobuf::int32 value) {
  
  file_id_ = value;
  // @@protoc_insertion_point(field_set:SendFileBlockResponse.file_id)
}

// int64 block_serial = 2;
inline void SendFileBlockResponse::clear_block_serial() {
  block_serial_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SendFileBlockResponse::block_serial() const {
  // @@protoc_insertion_point(field_get:SendFileBlockResponse.block_serial)
  return block_serial_;
}
inline void SendFileBlockResponse::set_block_serial(::google::protobuf::int64 value) {
  
  block_serial_ = value;
  // @@protoc_insertion_point(field_set:SendFileBlockResponse.block_serial)
}

// -------------------------------------------------------------------

// StopSendFileRequest

// int32 file_id = 1;
inline void StopSendFileRequest::clear_file_id() {
  file_id_ = 0;
}
inline ::google::protobuf::int32 StopSendFileRequest::file_id() const {
  // @@protoc_insertion_point(field_get:StopSendFileRequest.file_id)
  return file_id_;
}
inline void StopSendFileRequest::set_file_id(::google::protobuf::int32 value) {
  
  file_id_ = value;
  // @@protoc_insertion_point(field_set:StopSendFileRequest.file_id)
}

// string file_sha256 = 2;
inline void StopSendFileRequest::clear_file_sha256() {
  file_sha256_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StopSendFileRequest::file_sha256() const {
  // @@protoc_insertion_point(field_get:StopSendFileRequest.file_sha256)
  return file_sha256_.GetNoArena();
}
inline void StopSendFileRequest::set_file_sha256(const ::std::string& value) {
  
  file_sha256_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:StopSendFileRequest.file_sha256)
}
#if LANG_CXX11
inline void StopSendFileRequest::set_file_sha256(::std::string&& value) {
  
  file_sha256_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:StopSendFileRequest.file_sha256)
}
#endif
inline void StopSendFileRequest::set_file_sha256(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  file_sha256_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:StopSendFileRequest.file_sha256)
}
inline void StopSendFileRequest::set_file_sha256(const char* value, size_t size) {
  
  file_sha256_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:StopSendFileRequest.file_sha256)
}
inline ::std::string* StopSendFileRequest::mutable_file_sha256() {
  
  // @@protoc_insertion_point(field_mutable:StopSendFileRequest.file_sha256)
  return file_sha256_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StopSendFileRequest::release_file_sha256() {
  // @@protoc_insertion_point(field_release:StopSendFileRequest.file_sha256)
  
  return file_sha256_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StopSendFileRequest::set_allocated_file_sha256(::std::string* file_sha256) {
  if (file_sha256 != NULL) {
    
  } else {
    
  }
  file_sha256_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file_sha256);
  // @@protoc_insertion_point(field_set_allocated:StopSendFileRequest.file_sha256)
}

// -------------------------------------------------------------------

// StopSendFileResponse

// string file_name = 1;
inline void StopSendFileResponse::clear_file_name() {
  file_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StopSendFileResponse::file_name() const {
  // @@protoc_insertion_point(field_get:StopSendFileResponse.file_name)
  return file_name_.GetNoArena();
}
inline void StopSendFileResponse::set_file_name(const ::std::string& value) {
  
  file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:StopSendFileResponse.file_name)
}
#if LANG_CXX11
inline void StopSendFileResponse::set_file_name(::std::string&& value) {
  
  file_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:StopSendFileResponse.file_name)
}
#endif
inline void StopSendFileResponse::set_file_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:StopSendFileResponse.file_name)
}
inline void StopSendFileResponse::set_file_name(const char* value, size_t size) {
  
  file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:StopSendFileResponse.file_name)
}
inline ::std::string* StopSendFileResponse::mutable_file_name() {
  
  // @@protoc_insertion_point(field_mutable:StopSendFileResponse.file_name)
  return file_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StopSendFileResponse::release_file_name() {
  // @@protoc_insertion_point(field_release:StopSendFileResponse.file_name)
  
  return file_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StopSendFileResponse::set_allocated_file_name(::std::string* file_name) {
  if (file_name != NULL) {
    
  } else {
    
  }
  file_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file_name);
  // @@protoc_insertion_point(field_set_allocated:StopSendFileResponse.file_name)
}

// string file_sha256 = 2;
inline void StopSendFileResponse::clear_file_sha256() {
  file_sha256_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StopSendFileResponse::file_sha256() const {
  // @@protoc_insertion_point(field_get:StopSendFileResponse.file_sha256)
  return file_sha256_.GetNoArena();
}
inline void StopSendFileResponse::set_file_sha256(const ::std::string& value) {
  
  file_sha256_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:StopSendFileResponse.file_sha256)
}
#if LANG_CXX11
inline void StopSendFileResponse::set_file_sha256(::std::string&& value) {
  
  file_sha256_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:StopSendFileResponse.file_sha256)
}
#endif
inline void StopSendFileResponse::set_file_sha256(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  file_sha256_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:StopSendFileResponse.file_sha256)
}
inline void StopSendFileResponse::set_file_sha256(const char* value, size_t size) {
  
  file_sha256_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:StopSendFileResponse.file_sha256)
}
inline ::std::string* StopSendFileResponse::mutable_file_sha256() {
  
  // @@protoc_insertion_point(field_mutable:StopSendFileResponse.file_sha256)
  return file_sha256_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StopSendFileResponse::release_file_sha256() {
  // @@protoc_insertion_point(field_release:StopSendFileResponse.file_sha256)
  
  return file_sha256_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StopSendFileResponse::set_allocated_file_sha256(::std::string* file_sha256) {
  if (file_sha256 != NULL) {
    
  } else {
    
  }
  file_sha256_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file_sha256);
  // @@protoc_insertion_point(field_set_allocated:StopSendFileResponse.file_sha256)
}

// bool correct = 3;
inline void StopSendFileResponse::clear_correct() {
  correct_ = false;
}
inline bool StopSendFileResponse::correct() const {
  // @@protoc_insertion_point(field_get:StopSendFileResponse.correct)
  return correct_;
}
inline void StopSendFileResponse::set_correct(bool value) {
  
  correct_ = value;
  // @@protoc_insertion_point(field_set:StopSendFileResponse.correct)
}

// -------------------------------------------------------------------

// SendDirRequest

// string dir_name = 1;
inline void SendDirRequest::clear_dir_name() {
  dir_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SendDirRequest::dir_name() const {
  // @@protoc_insertion_point(field_get:SendDirRequest.dir_name)
  return dir_name_.GetNoArena();
}
inline void SendDirRequest::set_dir_name(const ::std::string& value) {
  
  dir_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SendDirRequest.dir_name)
}
#if LANG_CXX11
inline void SendDirRequest::set_dir_name(::std::string&& value) {
  
  dir_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SendDirRequest.dir_name)
}
#endif
inline void SendDirRequest::set_dir_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  dir_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SendDirRequest.dir_name)
}
inline void SendDirRequest::set_dir_name(const char* value, size_t size) {
  
  dir_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SendDirRequest.dir_name)
}
inline ::std::string* SendDirRequest::mutable_dir_name() {
  
  // @@protoc_insertion_point(field_mutable:SendDirRequest.dir_name)
  return dir_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendDirRequest::release_dir_name() {
  // @@protoc_insertion_point(field_release:SendDirRequest.dir_name)
  
  return dir_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendDirRequest::set_allocated_dir_name(::std::string* dir_name) {
  if (dir_name != NULL) {
    
  } else {
    
  }
  dir_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dir_name);
  // @@protoc_insertion_point(field_set_allocated:SendDirRequest.dir_name)
}

// int32 parent_id = 2;
inline void SendDirRequest::clear_parent_id() {
  parent_id_ = 0;
}
inline ::google::protobuf::int32 SendDirRequest::parent_id() const {
  // @@protoc_insertion_point(field_get:SendDirRequest.parent_id)
  return parent_id_;
}
inline void SendDirRequest::set_parent_id(::google::protobuf::int32 value) {
  
  parent_id_ = value;
  // @@protoc_insertion_point(field_set:SendDirRequest.parent_id)
}

// -------------------------------------------------------------------

// SendDirResponse

// string dir_name = 1;
inline void SendDirResponse::clear_dir_name() {
  dir_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SendDirResponse::dir_name() const {
  // @@protoc_insertion_point(field_get:SendDirResponse.dir_name)
  return dir_name_.GetNoArena();
}
inline void SendDirResponse::set_dir_name(const ::std::string& value) {
  
  dir_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SendDirResponse.dir_name)
}
#if LANG_CXX11
inline void SendDirResponse::set_dir_name(::std::string&& value) {
  
  dir_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SendDirResponse.dir_name)
}
#endif
inline void SendDirResponse::set_dir_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  dir_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SendDirResponse.dir_name)
}
inline void SendDirResponse::set_dir_name(const char* value, size_t size) {
  
  dir_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SendDirResponse.dir_name)
}
inline ::std::string* SendDirResponse::mutable_dir_name() {
  
  // @@protoc_insertion_point(field_mutable:SendDirResponse.dir_name)
  return dir_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendDirResponse::release_dir_name() {
  // @@protoc_insertion_point(field_release:SendDirResponse.dir_name)
  
  return dir_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendDirResponse::set_allocated_dir_name(::std::string* dir_name) {
  if (dir_name != NULL) {
    
  } else {
    
  }
  dir_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dir_name);
  // @@protoc_insertion_point(field_set_allocated:SendDirResponse.dir_name)
}

// int32 dir_id = 2;
inline void SendDirResponse::clear_dir_id() {
  dir_id_ = 0;
}
inline ::google::protobuf::int32 SendDirResponse::dir_id() const {
  // @@protoc_insertion_point(field_get:SendDirResponse.dir_id)
  return dir_id_;
}
inline void SendDirResponse::set_dir_id(::google::protobuf::int32 value) {
  
  dir_id_ = value;
  // @@protoc_insertion_point(field_set:SendDirResponse.dir_id)
}

// -------------------------------------------------------------------

// StopSendDirRequest

// string dir_id = 1;
inline void StopSendDirRequest::clear_dir_id() {
  dir_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StopSendDirRequest::dir_id() const {
  // @@protoc_insertion_point(field_get:StopSendDirRequest.dir_id)
  return dir_id_.GetNoArena();
}
inline void StopSendDirRequest::set_dir_id(const ::std::string& value) {
  
  dir_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:StopSendDirRequest.dir_id)
}
#if LANG_CXX11
inline void StopSendDirRequest::set_dir_id(::std::string&& value) {
  
  dir_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:StopSendDirRequest.dir_id)
}
#endif
inline void StopSendDirRequest::set_dir_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  dir_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:StopSendDirRequest.dir_id)
}
inline void StopSendDirRequest::set_dir_id(const char* value, size_t size) {
  
  dir_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:StopSendDirRequest.dir_id)
}
inline ::std::string* StopSendDirRequest::mutable_dir_id() {
  
  // @@protoc_insertion_point(field_mutable:StopSendDirRequest.dir_id)
  return dir_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StopSendDirRequest::release_dir_id() {
  // @@protoc_insertion_point(field_release:StopSendDirRequest.dir_id)
  
  return dir_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StopSendDirRequest::set_allocated_dir_id(::std::string* dir_id) {
  if (dir_id != NULL) {
    
  } else {
    
  }
  dir_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dir_id);
  // @@protoc_insertion_point(field_set_allocated:StopSendDirRequest.dir_id)
}

// -------------------------------------------------------------------

// StopSendDirResponse

// int32 dir_id = 1;
inline void StopSendDirResponse::clear_dir_id() {
  dir_id_ = 0;
}
inline ::google::protobuf::int32 StopSendDirResponse::dir_id() const {
  // @@protoc_insertion_point(field_get:StopSendDirResponse.dir_id)
  return dir_id_;
}
inline void StopSendDirResponse::set_dir_id(::google::protobuf::int32 value) {
  
  dir_id_ = value;
  // @@protoc_insertion_point(field_set:StopSendDirResponse.dir_id)
}

// -------------------------------------------------------------------

// AbortSendFileRequest

// int32 file_id = 1;
inline void AbortSendFileRequest::clear_file_id() {
  file_id_ = 0;
}
inline ::google::protobuf::int32 AbortSendFileRequest::file_id() const {
  // @@protoc_insertion_point(field_get:AbortSendFileRequest.file_id)
  return file_id_;
}
inline void AbortSendFileRequest::set_file_id(::google::protobuf::int32 value) {
  
  file_id_ = value;
  // @@protoc_insertion_point(field_set:AbortSendFileRequest.file_id)
}

// -------------------------------------------------------------------

// AbortSendFileResponse

// int32 file_id = 1;
inline void AbortSendFileResponse::clear_file_id() {
  file_id_ = 0;
}
inline ::google::protobuf::int32 AbortSendFileResponse::file_id() const {
  // @@protoc_insertion_point(field_get:AbortSendFileResponse.file_id)
  return file_id_;
}
inline void AbortSendFileResponse::set_file_id(::google::protobuf::int32 value) {
  
  file_id_ = value;
  // @@protoc_insertion_point(field_set:AbortSendFileResponse.file_id)
}

// bool success = 2;
inline void AbortSendFileResponse::clear_success() {
  success_ = false;
}
inline bool AbortSendFileResponse::success() const {
  // @@protoc_insertion_point(field_get:AbortSendFileResponse.success)
  return success_;
}
inline void AbortSendFileResponse::set_success(bool value) {
  
  success_ = value;
  // @@protoc_insertion_point(field_set:AbortSendFileResponse.success)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_send_5ffile_2eproto
